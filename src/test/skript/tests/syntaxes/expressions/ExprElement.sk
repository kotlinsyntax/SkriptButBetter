test "ExprElement":
	set {_list::*} to "foo", "bar" and "foobar"
	assert first element of {_list::*} is "foo" with "Incorrect first element"
	assert last element of {_list::*} is "foobar" with "Incorrect last element"
	assert 2nd element of {_list::*} is "bar" with "Incorrect 2nd element"
	assert {_list::*} contains (random element of {_list::*}) with "Incorrect random element"
	assert 2nd to last element of {_list::*} is "bar" with "Incorrect 2nd last element"
	assert 3rd last element of {_list::*} is "foo" with "Incorrect 3rd last element"
	assert 100th last element of {_list::*} is not set with "Incorrect 100th last element"
	assert 1st last element of {_list::*} is "foobar" with "Incorrect 1st last element"
	assert 0th last element of {_list::*} is not set with "Incorrect 0th last element"
	assert -1th last element of {_list::*} is not set with "Incorrect -1th element"
	assert first 2 elements of {_list::*} are "foo" or "bar" with "Incorrect first 2 elements"
	assert first -1 elements of {_list::*} is not set with "Incorrect first -1 elements"
	assert first 5 elements of {_list::*} are "foo", "bar" or "foobar" with "Incorrect first 5 elements"
	assert last 2 elements of {_list::*} are "bar" or "foobar" with "Incorrect last 2 elements"
	assert last -1 elements of {_list::*} is not set with "Incorrect last -1 elements"
	assert last 5 elements of {_list::*} are "foo", "bar" or "foobar" with "Incorrect last 5 elements"
	assert elements from 1 to 2 of {_list::*} are "foo" or "bar" with "Incorrect elements from 1 to 2"
	assert elements from 2 to 1 of {_list::*} are "foo" or "bar" with "Incorrect elements from 2 to 1"
	assert elements from 2 to 3 of {_list::*} are "bar" or "foobar" with "Incorrect elements from 2 to 3"
	assert elements from 3 to 3 of {_list::*} is "foobar" with "Incorrect elements from 3 to 3"
	assert elements from -1 to 4 of {_list::*} are "foo", "bar" or "foobar" with "Incorrect elements from -1 to 4"
	assert elements from 5 to 5 of {_list::*} is not set with "Incorrect elements from 5 to 5"
	assert elements from 1 to 1 of {_list::*} is "foo" with "Incorrect elements from 1 to 1"
	assert (first element out of (5 and 6)) + 5 is 10 with "Incorrect return type"
